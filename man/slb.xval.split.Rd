% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xval.R
\name{slb.xval.split}
\alias{slb.xval.split}
\title{Cross-Validation Data Splitter}
\usage{
slb.xval.split(X, Y, k = "loo", reverse = FALSE, ...)
}
\arguments{
\item{X}{\code{[n, d]} the data with \code{n} samples in \code{d} dimensions.}

\item{Y}{\code{[n]} vector or \code{[n, r]} array the responses for the samples.}

\item{k}{the cross-validated method to perform. Defaults to \code{'loo'}.
\itemize{
\item{if \code{k == round(k)}, performed k-fold cross-validation.}
\item{if \code{k == 'loo'}, performs leave-one-out cross-validation.}
}}

\item{reverse}{whether to flip the training and testing partitions. Defaults to \code{FALSE}.
\itemize{
\item{if \code{isTRUE(reverse)}, flips the training and testing partitions, such that cross-validation will be performed with 1 training fold and k-1 testing folds.}
\item{if \code{!isTRUE(reverse)}, standard cross-validation, with k-1 training folds and 1 testing fold.}
}}

\item{...}{optional args.}
}
\value{
sets the cross-validation sets as an object of class \code{"XV"}. Each element of the list contains the following items:
\item{\code{X.train}}{the training data as a \code{[n - n/k, d]} array if \code{isTRUE(reverse)}, and a \code{[n/k, d]} array otherwise.}
\item{\code{Y.train}}{the training labels as a \code{[n - n/k]} vector or \code{[n - n/k, r]} array if \code{isTRUE(reverse)}, and a \code{[n/k, d]} vector or \code{[n/k, r]} array otherwise.}
\item{\code{X.test}}{the testing data as a \code{[n/k, d]} array if \code{isTRUE(reverse)}, and a \code{[n - n/k, d]} array otherwise.}
\item{\code{Y.test}}{the testing labels as a \code{[n/k]} vector or \code{[n/k, r]} array if \code{isTRUE(reverse)}, and a \code{[n -n/k]} vector or \code{[n - n/k, r]} array otherwise.}
}
\description{
A function to split a dataset into
training and testing sets for cross validation.
}
\examples{
# prepare data for 10-fold validation
library(slb)
data(SWD)
sets.xval.10fold <- lol.xval.split(SWD$X, SWD$Y, k=10)

# prepare data for loo validation
sets.xval.loo <- lol.xval.split(SWD$X, SWD$Y, k='loo')

# reverse the training and testing sets
sets.xval.10fold.rev <- lol.xval.split(SWD$X, SWD$Y, k=10, reverse=TRUE)
}
\author{
Eric Bridgeford
}
